[{"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\index.js":"1","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\serviceWorker.js":"2","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\app\\store.js":"3","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\App.js":"4","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\features\\userSlice.js":"5","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\features\\appSlice.js":"6","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\firebase.js":"7","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Members.js":"8","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Login.js":"9","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Chat.js":"10","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Modal.js":"11","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Sidebar.js":"12","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Message.js":"13","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\ChatHeader.js":"14","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\SidebarServer.js":"15","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\SidebarChannel.js":"16"},{"size":644,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":5141,"mtime":1607927137618,"results":"19","hashOfConfig":"18"},{"size":255,"mtime":1607649429788,"results":"20","hashOfConfig":"18"},{"size":2194,"mtime":1611482367176,"results":"21","hashOfConfig":"18"},{"size":460,"mtime":1611481999197,"results":"22","hashOfConfig":"18"},{"size":1185,"mtime":1608539546963,"results":"23","hashOfConfig":"18"},{"size":722,"mtime":1607601580000,"results":"24","hashOfConfig":"18"},{"size":1761,"mtime":1608547060582,"results":"25","hashOfConfig":"18"},{"size":613,"mtime":1607840021634,"results":"26","hashOfConfig":"18"},{"size":7405,"mtime":1608537588026,"results":"27","hashOfConfig":"18"},{"size":436,"mtime":1608442379169,"results":"28","hashOfConfig":"18"},{"size":5638,"mtime":1611482957358,"results":"29","hashOfConfig":"18"},{"size":2226,"mtime":1608420121395,"results":"30","hashOfConfig":"18"},{"size":1332,"mtime":1608458543710,"results":"31","hashOfConfig":"18"},{"size":1340,"mtime":1608533623507,"results":"32","hashOfConfig":"18"},{"size":746,"mtime":1608533659171,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ilwtdi",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\index.js",[],["72","73"],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\serviceWorker.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\app\\store.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\App.js",["74","75","76","77","78"],"import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Sidebar from './components/Sidebar';\r\nimport Chat from './components/Chat';\r\nimport { selectUser, login, logout } from './features/userSlice'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Login from './components/Login';\r\nimport db, { auth } from './firebase';\r\nimport Modal from './components/Modal'\r\nimport Members from './components/Members';\r\nimport firebase from 'firebase'\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const [modalDisplay, setModalDisplay] = useState(\"none\");\r\n  function toggleModal(){\r\n    (modalDisplay == \"none\")?\r\n      setModalDisplay(\"flex\")\r\n      :setModalDisplay(\"none\")\r\n  }\r\n  \r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(async (authUser) => {\r\n      let userCollection = db.collection(\"users\");\r\n      if (authUser) {\r\n        let docRef = userCollection.where(\"uid\", \"==\", authUser.uid).limit(1).get();\r\n        await docRef.then((snapshot) => {\r\n          console.log(authUser)\r\n          if(snapshot.docs.length == 0){\r\n            userCollection.add({\r\n              uid: authUser.uid,\r\n              displayName: authUser.displayName,\r\n              photo: authUser.photoURL,\r\n              status: \"online\"\r\n            })\r\n          }\r\n          else\r\n            snapshot.forEach((doc) =>{\r\n              userCollection.doc(doc.id).update({status: \"online\"})\r\n              return;\r\n            })\r\n        })\r\n        dispatch(\r\n          login({\r\n            uid: authUser.uid,\r\n            photo: authUser.photoURL,\r\n            email: authUser.email,\r\n            displayName: authUser.displayName,\r\n          })\r\n        );\r\n      } else {\r\n          if(user){\r\n            await dispatch(logout());\r\n          }\r\n      }\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {user? (\r\n        <>\r\n          <Sidebar/>\r\n          <Chat />\r\n          <Members />\r\n          <Modal displayState={modalDisplay} displayHook={setModalDisplay} />\r\n        </>\r\n      ):(\r\n        <>\r\n          <Login />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\features\\userSlice.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\features\\appSlice.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\firebase.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Members.js",["79","80","81","82","83","84"],"import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectMembersList, setMembersList } from '../features/appSlice';\r\nimport { selectUser } from '../features/userSlice';\r\nimport db from '../firebase';\r\nimport './Members.css'\r\n\r\nfunction Members() {\r\n    // const membersList = useSelector(selectMembersList);\r\n    let userCollection = db.collection(\"users\");\r\n    const [members, setMembers] = useState([]);\r\n    // const user = useSelector(selectUser);\r\n    useEffect(() => {\r\n        userCollection.onSnapshot(snapshot => (\r\n            setMembers(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                user: doc.data()\r\n            })))\r\n        ))\r\n    }, []);\r\n        // if (membersList)\r\n            // membersList.array.forEach(member => {\r\n                // if(member.status == \"online\")\r\n            // })\r\n    return (\r\n        <div className=\"members\">\r\n            {/* Pull users in specified server / channel from firebase and iterate for each list */}\r\n            <div className=\"members__list\">\r\n                <p>USERS</p>\r\n                {\r\n                    members.map((member) => (\r\n                        <div key={member.user.uid + member.user.status} className={(member.user.status == \"online\")? \"active\":\"inactive\"}>\r\n                            <Avatar src={member.user.photo} />\r\n                            <p>{member.user.displayName}</p>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            {/* <div className=\"members__list\"> */}\r\n                {/* <p>OFFLINE</p> */}\r\n            {/* </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Members\r\n","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Login.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Chat.js",["85","86","87","88","89"],"import React, { useEffect, useImperativeHandle, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Message from './Message'\r\nimport ChatHeader from './ChatHeader'\r\nimport { selectUser } from '../features/userSlice'\r\nimport { selectChannelId, selectChannelName, selectServerId, selectServerName } from '../features/appSlice'\r\nimport Picker from 'emoji-picker-react';\r\nimport './Chat.css'\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard'\r\nimport GifIcon from '@material-ui/icons/Gif'\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\r\nimport db from '../firebase'\r\nimport firebase from 'firebase'\r\n\r\nfunction Chat() {\r\n    const dummy = useRef();\r\n    const user = useSelector(selectUser);\r\n    const serverId = useSelector(selectServerId);\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n    const [input, setInput] = useState(() => {return \"\"});\r\n    const [messages, setMessages] = useState(() => {return []});\r\n    const [file, setFile] = useState(null);\r\n    const [placeholder, setPlaceholder] = useState(() => {return null});\r\n    const [emojiDisplay, setEmojiDisplay] = useState(() => {return \"none\"});\r\n    const fileSizeCap = 2097152; //Should also verify limit on backend\r\n    const storageRef = firebase.storage().ref();\r\n\r\n    function toggleEmojiPicker() {\r\n        (channelId && emojiDisplay == \"none\")?\r\n            setEmojiDisplay(\"flex\"):\r\n            setEmojiDisplay(\"none\");\r\n    }\r\n\r\n    useEffect(() => {\t\r\n        if (channelId) {\t\r\n            db.collection(\"servers/\" + serverId + \"/channels/\" + channelId + \"/messages\")\t\r\n                .orderBy(\"timestamp\", \"asc\")\t\r\n                .onSnapshot((snapshot) =>\t\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\t\r\n                );\r\n            dummy.current.scrollIntoView({ behavior: 'smooth' });\t\r\n        }\t\r\n    }, [channelId]);\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        let fileRef = null;\r\n        let fileURL = null;\r\n        // Handle file attachment here\r\n        if(file){\r\n            if(file.size > fileSizeCap){\r\n                alert(\"File is over 2MB limit!\");\r\n                setFile(null);\r\n            }\r\n            else {\r\n                storageRef.child(user.displayName + \"-\" + file.name).getDownloadURL().then(onResolve, onReject);\r\n                function onReject() {\r\n                    fileRef = storageRef.child(user.displayName + \"-\" + file.name);\r\n                    console.log(file.size);\r\n                    fileRef.put(file)\r\n                    .then(async() => {\r\n                        fileURL = await fileRef.getDownloadURL();\r\n                        console.log(\"File has been uploaded\");\r\n                    })\r\n                    .then(async () => {\r\n                        await db.collection(\"servers/\" + serverId + \"/channels/\" + channelId + \"/messages\").add({\t\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\t\r\n                            message: input,\t\r\n                            user: user,\t\r\n                            file: fileURL,\r\n                            fileType: file.type\r\n                        })\t\r\n                    })\r\n                    .then(() => {\r\n                        setFile(null);\r\n                    })\r\n                }\r\n            }\r\n\r\n            async function onResolve(foundURL) {\r\n                db.collection(\"servers/\" + serverId + \"/channels\").doc(channelId).collection(\"messages\").add({\t\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\t\r\n                    message: input,\t\r\n                    user: user,\t\r\n                    file: await foundURL,\r\n                    fileType: file.type\r\n                })\t\r\n                setFile(null);\r\n            }\r\n        }\r\n        // Otherwise, just send text\r\n        else if(!file && input && input.split(\" \").join(\"\") != \"\"){\r\n            db.collection(\"servers/\" + serverId + \"/channels\").doc(channelId).collection(\"messages\").add({\t\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\t\r\n                message: input,\t\r\n                user: user,\t\r\n                file: null\r\n            });\t\r\n            setFile(null);\r\n        }\r\n        setInput(\"\");\r\n        setPlaceholder(null);\r\n        dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader channelName={ channelName }/>\r\n\r\n            <div className=\"chat__messages\">\r\n                {\r\n                messages.map((message) => (\r\n                    <Message\t\r\n                        timestamp={message.timestamp}\t\r\n                        message={message.message}\t\r\n                        user={message.user}\t\r\n                        file={message.file}\r\n                        fileType={message.fileType}\r\n                    />\r\n                ))}\r\n                <div ref={dummy}></div>\r\n            </div>\r\n            <div id=\"emoji_picker\" style={{display: emojiDisplay}}>\r\n                <Picker onEmojiClick={(event, emojiObject) => { setInput(input + emojiObject.emoji)}} />\r\n            </div>\r\n\r\n            <div className=\"chat__input\">\r\n                <input type=\"file\" \r\n                        id=\"att_file\"\r\n                        name=\"att_file\" \r\n                        accept=\"image/x-png,image/gif,image/jpeg,image/bmp,audio/mpeg\"\r\n                        disabled = { !channelId } \r\n                        files={ file }\r\n                        value={() => {return (file)? file.name :\"\" }} \r\n                        onChange={e => {\r\n                            if (e.target.files[0]){\r\n                                setFile(e.target.files[0])\r\n                                setPlaceholder(e.target.files[0].name)\r\n                            } else {\r\n                                console.log(\"File action cancelled\")\r\n                            }\r\n                        }} />\r\n                {\r\n                    React.createElement(\r\n                        'label',\r\n                        {htmlFor: 'att_file'},\r\n                        <AddCircleIcon fontSize=\"large\" />\r\n                    )\r\n                }\r\n                <form>\r\n                    <input \r\n                        value={ input }\r\n                        disabled={ !channelId } \r\n                        onChange={ (e) => setInput(e.target.value) }\r\n                        placeholder={(placeholder)? placeholder: \"#Message \" + channelName} \r\n                    />\r\n                    <button \r\n                        disabled={ !channelId } \r\n                        className=\"chat__inputButton\" \r\n                        type=\"submit\"\r\n                        onClick={sendMessage}\r\n                    >\r\n                        Send Message\r\n                    </button>\r\n                </form>\r\n\r\n                <div className=\"chat__inputIcons\">\r\n                    <CardGiftcardIcon fontSize=\"large\" />\r\n                    <GifIcon fontSize=\"large\" />\r\n                    <EmojiEmotionsIcon onClick={toggleEmojiPicker} fontSize=\"large\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Modal.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Sidebar.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Message.js",["90","91"],"import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Linkify from 'react-linkify';\r\nimport \"./Message.css\"\r\n\r\nfunction Message({ timestamp, message, user, file, fileType }) {\r\n    let url = \"not defined\";\r\n    function verifyFile() {\r\n        let el = null;\r\n        if(file){\r\n            switch(fileType){\r\n                case(\"image/apng\"):\r\n                case(\"image/avif\"):\r\n                case(\"image/bmp\"):\r\n                case(\"image/gif\"):\r\n                case(\"image/jpeg\"):\r\n                case(\"image/png\"):\r\n                case(\"image/svg+xml\"):\r\n                case(\"image/webp\"):\r\n                case(\"image/x-icon\"):\r\n                    el = <img src={file} className=\"attached__media message__attachment\" />\r\n                    break;\r\n                case(\"audio/mpeg\"):\r\n                case(\"audio/ogg\"):\r\n                case(\"audio/wav\"):\r\n                    el = <audio controls className=\"message__attachment\"><source src={file}/>Audio tag unsupported</audio>\r\n                    break;\r\n                case(\"video/mp4\"):\r\n                case(\"video/ogg\"):\r\n                case(\"video/webm\"):\r\n                    el = <video controls src={file} className=\"attached__media message__attachment\"></video>\r\n                    break;\r\n                default:\r\n                    el = <a href={file} target=\"_blank\">{file}</a>\r\n                    break;\r\n            }\r\n        }\r\n        return el;\r\n    }\r\n    return (\r\n        <div className=\"message\">\r\n            <Avatar className=\"message__avatar\" src={user.photo}/>\r\n            <div className=\"message__info\">\r\n                <h4>\r\n                    { user.displayName }\r\n                    <span className=\"message__timestamp\">\r\n                        {new Date(timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                </h4>\r\n\r\n                <p>\r\n                    <Linkify properties={{target: '_blank', url: Linkify.MATCH}} >\r\n                        { message }\r\n                    </Linkify>\r\n                    { console.log(url) }\r\n                </p>\r\n                {verifyFile()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\ChatHeader.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\SidebarServer.js",["92","93"],"import React from 'react';\r\nimport './SidebarServer.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport { setServerInfo } from '../features/appSlice';\r\nimport db from '../firebase';\r\nfunction SidebarServer({serverId, serverName, photo, channels, setChannels}) {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div key={serverId} className=\"sidebar__server\" \r\n            onClick={ () => {\r\n                dispatch(\r\n                    setServerInfo({\r\n                        serverId: serverId,\r\n                        serverName: serverName,\r\n                    })\r\n                )\r\n                db.collection('servers/' + serverId + '/channels')\r\n                    .orderBy(\"channelName\", \"asc\")\r\n                    .onSnapshot(snapshot => (\r\n                        setChannels(snapshot.docs.map(doc => ({\r\n                            id: doc.id,\r\n                            channel: doc.data(),\r\n                        })))\r\n                    ))\r\n                    console.log(channels);\r\n            }}\r\n            >\r\n            <img id={serverId} name={serverName} src={(photo)?photo:\"\"} className=\"sidebar__serverImg\" />\t\t\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarServer\r\n","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\SidebarChannel.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":11,"column":8,"nodeType":"100","messageId":"101","endLine":11,"endColumn":16},{"ruleId":"98","severity":1,"message":"102","line":17,"column":12,"nodeType":"100","messageId":"101","endLine":17,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":18,"column":19,"nodeType":"105","messageId":"106","endLine":18,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":30,"column":35,"nodeType":"105","messageId":"106","endLine":30,"endColumn":37},{"ruleId":"107","severity":1,"message":"108","line":58,"column":6,"nodeType":"109","endLine":58,"endColumn":16,"suggestions":"110"},{"ruleId":"98","severity":1,"message":"111","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":21},{"ruleId":"98","severity":1,"message":"112","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":27},{"ruleId":"98","severity":1,"message":"113","line":4,"column":29,"nodeType":"100","messageId":"101","endLine":4,"endColumn":43},{"ruleId":"98","severity":1,"message":"114","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":20},{"ruleId":"107","severity":1,"message":"115","line":21,"column":8,"nodeType":"109","endLine":21,"endColumn":10,"suggestions":"116"},{"ruleId":"103","severity":1,"message":"104","line":33,"column":104,"nodeType":"105","messageId":"106","endLine":33,"endColumn":106},{"ruleId":"98","severity":1,"message":"117","line":1,"column":28,"nodeType":"100","messageId":"101","endLine":1,"endColumn":47},{"ruleId":"98","severity":1,"message":"118","line":6,"column":62,"nodeType":"100","messageId":"101","endLine":6,"endColumn":78},{"ruleId":"103","severity":1,"message":"104","line":31,"column":36,"nodeType":"105","messageId":"106","endLine":31,"endColumn":38},{"ruleId":"107","severity":1,"message":"119","line":45,"column":8,"nodeType":"109","endLine":45,"endColumn":19,"suggestions":"120"},{"ruleId":"103","severity":1,"message":"121","line":93,"column":61,"nodeType":"105","messageId":"106","endLine":93,"endColumn":63},{"ruleId":"122","severity":1,"message":"123","line":21,"column":26,"nodeType":"124","endLine":21,"endColumn":92},{"ruleId":"125","severity":1,"message":"126","line":34,"column":41,"nodeType":"127","endLine":34,"endColumn":56},{"ruleId":"98","severity":1,"message":"128","line":8,"column":11,"nodeType":"100","messageId":"101","endLine":8,"endColumn":15},{"ruleId":"122","severity":1,"message":"123","line":31,"column":13,"nodeType":"124","endLine":31,"endColumn":106},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'toggleModal' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'useSelector' is defined but never used.","'selectMembersList' is defined but never used.","'setMembersList' is defined but never used.","'selectUser' is defined but never used.","React Hook useEffect has a missing dependency: 'userCollection'. Either include it or remove the dependency array.",["132"],"'useImperativeHandle' is defined but never used.","'selectServerName' is defined but never used.","React Hook useEffect has a missing dependency: 'serverId'. Either include it or remove the dependency array.",["133"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [dispatch, user]",{"range":"140","text":"141"},"Update the dependencies array to be: [userCollection]",{"range":"142","text":"143"},"Update the dependencies array to be: [channelId, serverId]",{"range":"144","text":"145"},[1845,1855],"[dispatch, user]",[777,779],"[userCollection]",[1998,2009],"[channelId, serverId]"]