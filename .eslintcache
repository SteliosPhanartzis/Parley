[{"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\index.js":"1","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\App.js":"2","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\serviceWorker.js":"3","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\app\\store.js":"4","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\firebase.js":"5","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\features\\userSlice.js":"6","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Sidebar.js":"7","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Chat.js":"8","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Login.js":"9","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\features\\appSlice.js":"10","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\SidebarServer.js":"11","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\SidebarChannel.js":"12","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Message.js":"13","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\ChatHeader.js":"14"},{"size":644,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":1070,"mtime":1607830575725,"results":"17","hashOfConfig":"16"},{"size":5141,"mtime":1607927137618,"results":"18","hashOfConfig":"16"},{"size":255,"mtime":1607649429788,"results":"19","hashOfConfig":"16"},{"size":722,"mtime":1607601580000,"results":"20","hashOfConfig":"16"},{"size":460,"mtime":1607656298957,"results":"21","hashOfConfig":"16"},{"size":5542,"mtime":1608196116026,"results":"22","hashOfConfig":"16"},{"size":3509,"mtime":1607934707740,"results":"23","hashOfConfig":"16"},{"size":613,"mtime":1607840021634,"results":"24","hashOfConfig":"16"},{"size":978,"mtime":1607841708630,"results":"25","hashOfConfig":"16"},{"size":1879,"mtime":1608196083807,"results":"26","hashOfConfig":"16"},{"size":737,"mtime":1607830786404,"results":"27","hashOfConfig":"16"},{"size":638,"mtime":1607935275149,"results":"28","hashOfConfig":"16"},{"size":1274,"mtime":1607826830500,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2m9nlk",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\index.js",[],["60","61"],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\App.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\serviceWorker.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\app\\store.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\firebase.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\features\\userSlice.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Sidebar.js",["62"],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Chat.js",["63","64","65"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Message from './Message'\r\nimport ChatHeader from './ChatHeader'\r\nimport { selectUser } from '../features/userSlice'\r\nimport { selectChannelId, selectChannelName, selectServerId, selectServerName } from '../features/appSlice'\r\nimport './Chat.css'\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard'\r\nimport GifIcon from '@material-ui/icons/Gif'\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\r\nimport db from '../firebase'\r\nimport firebase from 'firebase'\r\n\r\nfunction Chat() {\r\n    const dummy = useRef();\r\n    const user = useSelector(selectUser);\r\n    const serverId = useSelector(selectServerId);\r\n    const serverName = useSelector(selectServerName);\r\n    const channelId = useSelector(selectChannelId);\r\n    const channelName = useSelector(selectChannelName);\r\n    const [input, setInput] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\t\r\n        if (channelId) {\t\r\n        db.collection(\"channels\")\t\r\n            .doc(channelId)\t\r\n            .collection(\"messages\")\t\r\n            .orderBy(\"timestamp\", \"asc\")\t\r\n            .onSnapshot((snapshot) =>\t\r\n            setMessages(snapshot.docs.map((doc) => doc.data()))\t\r\n            );\r\n        dummy.current.scrollIntoView({ behavior: 'smooth' });\t\r\n        }\t\r\n    }, [channelId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        if(input && input.split(\" \").join(\"\") != \"\"){\r\n            db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\t\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\t\r\n                message: input,\t\r\n                user: user,\t\r\n            });\t\r\n        }\r\n        setInput(\"\");\t\r\n        dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader channelName={ channelName }/>\r\n\r\n            <div className=\"chat__messages\">\r\n                {\r\n                messages.map((message) => (\r\n                    <Message\t\r\n                        timestamp={message.timestamp}\t\r\n                        message={message.message}\t\r\n                        user={message.user}\t\r\n                    />\r\n                ))}\r\n                <div ref={dummy}></div>\r\n            </div>\r\n\r\n            <div className=\"chat__input\">\r\n                <AddCircleIcon fontSize=\"large\" />\r\n                <form>\r\n                    <input \r\n                        value={ input }\r\n                        disabled={ !channelId } \r\n                        onChange={ (e) => setInput(e.target.value) }\r\n                        placeholder={`Message #${channelName}`} \r\n                    />\r\n                    <button \r\n                        disabled={ !channelId } \r\n                        className=\"chat__inputButton\" \r\n                        type=\"submit\"\r\n                        onClick={sendMessage}\r\n                    >\r\n                        Send Message\r\n                    </button>\r\n                </form>\r\n\r\n                <div className=\"chat__inputIcons\">\r\n                    <CardGiftcardIcon fontSize=\"large\" />\r\n                    <GifIcon fontSize=\"large\" />\r\n                    <EmojiEmotionsIcon fontSize=\"large\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Login.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\features\\appSlice.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\SidebarServer.js",["66","67"],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\SidebarChannel.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\Message.js",[],"C:\\Users\\steli\\Desktop\\WebDev\\Parley\\src\\components\\ChatHeader.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":46,"column":14,"nodeType":"74","messageId":"75","endLine":46,"endColumn":25},{"ruleId":"72","severity":1,"message":"76","line":18,"column":11,"nodeType":"74","messageId":"75","endLine":18,"endColumn":19},{"ruleId":"72","severity":1,"message":"77","line":19,"column":11,"nodeType":"74","messageId":"75","endLine":19,"endColumn":21},{"ruleId":"78","severity":1,"message":"79","line":40,"column":47,"nodeType":"80","messageId":"81","endLine":40,"endColumn":49},{"ruleId":"72","severity":1,"message":"82","line":8,"column":11,"nodeType":"74","messageId":"75","endLine":8,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":45,"column":13,"nodeType":"85","endLine":45,"endColumn":106},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'getChannels' is defined but never used.","Identifier","unusedVar","'serverId' is assigned a value but never used.","'serverName' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]